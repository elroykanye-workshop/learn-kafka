---
version: '3'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"
    networks:
      - app-network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    restart: on-failure
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
      - "9999:9999"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - app-network

  app-consumer:
    container_name: app-consumer
    restart: on-failure
    depends_on:
      - kafka
    build:
      context: consumer
      dockerfile: Dockerfile
    ports:
      - "19551:9551"
    networks:
      - app-network
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:29092

  app-producer:
    container_name: app-producer
    restart: on-failure
    depends_on:
      - kafka
    build:
      context: producer
      dockerfile: Dockerfile
    ports:
      - "19550:9550"
    networks:
      - app-network
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:29092

networks:
  app-network:
    driver: bridge